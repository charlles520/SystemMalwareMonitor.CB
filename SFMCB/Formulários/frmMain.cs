using System;
using System.Collections;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Threading;
using System.Windows.Forms;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using SFMCB.Connections;
using SFMCB.Properties;
using SFMCB.Utilitários;

namespace SFMCB
{
    public partial class frmMain : Form
    {
        private readonly Settings mySettings = new Settings();

        public frmMain()
        {
            InitializeComponent();
        }

        private void frmMain_Load(object sender, EventArgs e)
        {
            if (!Environment.Is64BitProcess)
            {
                MessageBox.Show("O programa deve ser compilado em x64", "Error", MessageBoxButtons.OK,
                    MessageBoxIcon.Exclamation);
                Application.Exit();
            }

            AdjustPriv.AdjustToken();
            doTCPConnectionsView();
            doLoadFileFoldersMonitor();
        }

        private void SobreToolStripMenuItem_Click(object sender, EventArgs e)
        {
            new inf().Show();
        }

        #region "Monitoring files and folders"

        private void AppendText(string Status, string FullPath, string Nome, string TipoDeArquivo, string NomeAnterior)
        {
            Application.DoEvents();
            var invokeRequired = LV_Logs.InvokeRequired;
            checked
            {
                if (invokeRequired)
                {
                    LV_Logs.Invoke(new AppendListHandler(AppendText), Status, FullPath, Nome, TipoDeArquivo,
                        NomeAnterior);
                }
                else
                {
                    var flag = Operators.CompareString(Status, "Created", false) == 0;
                    if (flag)
                    {
                        var flag2 = Operators.CompareString(TipoDeArquivo, "Arquivo", false) == 0;
                        if (flag2)
                        {
                            var ICO = Icon.ExtractAssociatedIcon(FullPath);
                            IM.Images.Add(ICO);
                        }

                        var I = new ListViewItem();
                        I.UseItemStyleForSubItems = false;
                        I.Text = DateAndTime.TimeOfDay.ToLongTimeString();
                        I.SubItems.Add(Nome);
                        I.SubItems.Add(FullPath);
                        I.SubItems.Add(Status);
                        var flag3 = Operators.CompareString(TipoDeArquivo, "Arquivo", false) == 0;
                        if (flag3)
                        {
                            I.ImageIndex = IM.Images.Count - 1;
                            I.Group = LV_Logs.Groups["GP_Arquivos_Criados"];
                        }
                        else
                        {
                            I.ImageIndex = 0;
                            I.Group = LV_Logs.Groups["GP_Pastas_Criadas"];
                        }

                        I.SubItems[3].BackColor = Color.Green;
                        LV_Logs.Items.Add(I);
                    }
                    else
                    {
                        var flag4 = Operators.CompareString(Status, "Deleted", false) == 0;
                        if (flag4)
                        {
                            var I2 = new ListViewItem();
                            I2.UseItemStyleForSubItems = false;
                            I2.Text = DateAndTime.TimeOfDay.ToLongTimeString();
                            I2.SubItems.Add(Nome);
                            I2.SubItems.Add(FullPath);
                            I2.SubItems.Add(Status);
                            I2.ImageIndex = 1;
                            I2.Group = LV_Logs.Groups["GP_Arquivos_Excluidos"];
                            I2.SubItems[3].BackColor = Color.DarkRed;
                            LV_Logs.Items.Add(I2);
                        }
                        else
                        {
                            var flag5 = Operators.CompareString(Status, "Changed", false) == 0;
                            if (flag5)
                            {
                                var flag6 = Operators.CompareString(TipoDeArquivo, "Arquivo", false) == 0;
                                if (flag6)
                                {
                                    var ICO2 = Icon.ExtractAssociatedIcon(FullPath);
                                    IM.Images.Add(ICO2);
                                }

                                var I3 = new ListViewItem();
                                I3.UseItemStyleForSubItems = false;
                                I3.Text = DateAndTime.TimeOfDay.ToLongTimeString();
                                I3.SubItems.Add(Nome);
                                I3.SubItems.Add(FullPath);
                                I3.SubItems.Add(Status);
                                var flag7 = Operators.CompareString(TipoDeArquivo, "Arquivo", false) == 0;
                                if (flag7)
                                {
                                    I3.ImageIndex = IM.Images.Count - 1;
                                    I3.Group = LV_Logs.Groups["GP_Arquivos_Modificados"];
                                    I3.SubItems[3].BackColor = Color.Silver;
                                }
                                else
                                {
                                    I3.ImageIndex = 0;
                                    I3.Group = LV_Logs.Groups["GP_Pastas_Modificados"];
                                    I3.SubItems[3].BackColor = Color.Gold;
                                }

                                LV_Logs.Items.Add(I3);
                            }
                            else
                            {
                                var flag8 = Operators.CompareString(Status, "Renamed", false) == 0;
                                if (flag8)
                                {
                                    var flag9 = Operators.CompareString(TipoDeArquivo, "Arquivo", false) == 0;
                                    if (flag9)
                                    {
                                        var ICO3 = Icon.ExtractAssociatedIcon(FullPath);
                                        IM.Images.Add(ICO3);
                                    }

                                    var I4 = new ListViewItem();
                                    I4.UseItemStyleForSubItems = false;
                                    I4.Text = DateAndTime.TimeOfDay.ToLongTimeString();
                                    I4.SubItems.Add(NomeAnterior + " -> " + Nome);
                                    I4.SubItems.Add(FullPath);
                                    I4.SubItems.Add(Status);
                                    var flag10 = Operators.CompareString(TipoDeArquivo, "Arquivo", false) == 0;
                                    if (flag10)
                                    {
                                        I4.ImageIndex = IM.Images.Count - 1;
                                        I4.Group = LV_Logs.Groups["GP_Arquivos_Renomeado"];
                                        I4.SubItems[3].BackColor = Color.DarkOliveGreen;
                                    }
                                    else
                                    {
                                        I4.ImageIndex = 0;
                                        I4.Group = LV_Logs.Groups["GP_Pastas_Renomeada"];
                                        I4.SubItems[3].BackColor = Color.DarkOrange;
                                    }

                                    LV_Logs.Items.Add(I4);
                                }
                            }
                        }
                    }
                }
            }
        }

        private delegate void AppendListHandler(string Status, string FullPath, string Nome, string TipoDeArquivo,
            string NomeAnterior);

        private void Meus_Status(object sender, FileSystemEventArgs e)
        {
            var flag = e.ChangeType == WatcherChangeTypes.Created;
            if (flag)
            {
                var flag2 = File.Exists(e.FullPath);
                if (flag2)
                {
                    AppendText(e.ChangeType.ToString(), e.FullPath, e.Name, "Arquivo", null);
                }
                else
                {
                    var flag3 = Directory.Exists(e.FullPath);
                    if (flag3) AppendText(e.ChangeType.ToString(), e.FullPath, e.Name, "Pasta", null);
                }
            }
            else
            {
                var flag4 = e.ChangeType == WatcherChangeTypes.Deleted;
                if (flag4)
                {
                    AppendText(e.ChangeType.ToString(), e.FullPath, e.Name, "None", null);
                }
                else
                {
                    var flag5 = e.ChangeType == WatcherChangeTypes.Changed;
                    if (flag5)
                    {
                        var flag6 = File.Exists(e.FullPath);
                        if (flag6)
                        {
                            AppendText(e.ChangeType.ToString(), e.FullPath, e.Name, "Arquivo", null);
                        }
                        else
                        {
                            var flag7 = Directory.Exists(e.FullPath);
                            if (flag7) AppendText(e.ChangeType.ToString(), e.FullPath, e.Name, "Pasta", null);
                        }
                    }
                }
            }
        }

        private void Arquivo_Renomeado(object sender, RenamedEventArgs e)
        {
            if (File.Exists(e.FullPath))
            {
                AppendText(e.ChangeType.ToString(), e.FullPath, e.Name, "Arquivo", e.OldName);
            }
            else
            {
                if (Directory.Exists(e.FullPath))
                    AppendText(e.ChangeType.ToString(), e.FullPath, e.Name, "Pasta", e.OldName);
            }
        }

        private void Monitoramento_Disposed(object sender, EventArgs e)
        {
            try
            {
                LV_STATUS.Items.Add("Disposed : " + e);
            }
            catch
            {
                // ignorar
            }
        }

        private void Ligar()
        {
            var flag = Operators.CompareString(Armazenar.MeusDiretorios, null, false) == 0;
            if (flag)
            {
                Interaction.MsgBox("NENHUM DIRETORIO ADICIONADO", MsgBoxStyle.Exclamation, "Informações");
            }
            else
            {
                bnt_stop.Enabled = true;
                bnt_stop.ForeColor = Color.Red;
                ToolStripStatusLabel2.Text = "verificando";
                ToolStripStatusLabel2.ForeColor = Color.Green;
                DESATIVAR();
                var aFileWatcherInstance = new ArrayList();
                foreach (var sMonitorFolder in Strings.Split(Armazenar.MeusDiretorios, "\r\n", -1, CompareMethod.Binary)
                )
                {
                    Application.DoEvents();
                    Thread.Sleep(50);
                    var flag2 = Operators.CompareString(sMonitorFolder, null, false) != 0;
                    if (flag2)
                    {
                        var flag3 = Directory.Exists(sMonitorFolder);
                        if (flag3)
                        {
                            var oFileWatcher = new FileSystemWatcher();
                            oFileWatcher.Path = sMonitorFolder;
                            oFileWatcher.Filter = mySettings.Filtrar;
                            if (mySettings.SubDiretorios)
                                oFileWatcher.IncludeSubdirectories = true;

                            if (mySettings.Modificados)
                                oFileWatcher.Changed += Meus_Status;
                            else
                                oFileWatcher.Changed -= Meus_Status;


                            if (mySettings.Excluídos)
                                oFileWatcher.Deleted += Meus_Status;
                            else
                                oFileWatcher.Deleted -= Meus_Status;


                            if (mySettings.Criados)
                                oFileWatcher.Created += Meus_Status;
                            else
                                oFileWatcher.Created -= Meus_Status;

                            if (mySettings.Renomeados)
                                oFileWatcher.Renamed += Arquivo_Renomeado;
                            else
                                oFileWatcher.Renamed -= Arquivo_Renomeado;


                            oFileWatcher.Error += Erro_Monitoramento;
                            oFileWatcher.Disposed += Monitoramento_Disposed;
                            oFileWatcher.EnableRaisingEvents = true;
                            oFileWatcher.IncludeSubdirectories = mySettings.SubDiretorios;
                            aFileWatcherInstance.Add(oFileWatcher);
                            LV_STATUS.Items.Add("Monitorando : " + sMonitorFolder + " OK :)");
                        }
                        else
                        {
                            LV_STATUS.Items.Add("Diretório Não Existe : " + sMonitorFolder + " ERRO :(");
                        }
                    }
                }
            }
        }

        private void Erro_Monitoramento(object sender, ErrorEventArgs e)
        {
            try
            {
                LV_STATUS.Items.Add("ERRO : " + e.GetException().Message);
            }
            catch
            {
                // ignorar
            }
        }

        private void DESATIVAR()
        {
            btn_Iniciar.Enabled = false;
        }

        private void Ativar()
        {
            btn_Iniciar.Enabled = true;
        }

        private void doLoadFileFoldersMonitor()
        {
            lbl_dir.Text = "Diretório ex: " + Environment.GetFolderPath(Environment.SpecialFolder.Desktop);
            var flag = !File.Exists(Application.StartupPath + "\\Arq.log");
            if (!flag)
            {
                var I = new StreamReader(Application.StartupPath + "\\Arq.log");
                foreach (var A in Strings.Split(I.ReadToEnd(), "\r\n", -1, CompareMethod.Binary))
                {
                    var flag2 = Directory.Exists(A);
                    if (flag2)
                    {
                        var D = new ListViewItem();
                        D.Text = Path.GetFileName(A);
                        D.SubItems.Add(A);
                        D.ImageIndex = 0;
                        D.Group = LV_DIR.Groups["GP_Pastas"];
                        LV_DIR.Items.Add(D);
                    }
                }

                I.Close();
                CK_MOD.Checked = mySettings.Modificados;
                CK_DEL.Checked = mySettings.Excluídos;
                CK_CRIADOS.Checked = mySettings.Criados;
                CK_RENAMED.Checked = mySettings.Renomeados;
                txt_Filtro.Text = mySettings.Filtrar;
                CK_SUBDIR.Checked = mySettings.SubDiretorios;
                P_iniciar.Checked = mySettings.Pergunta_ao_iniciar;
                var flag3 = !File.Exists(Application.StartupPath + "\\Arq.log");
                if (!flag3)
                {
                    var N = new StreamReader(Application.StartupPath + "\\Arq.log");
                    Armazenar.MeusDiretorios = N.ReadToEnd();
                    N.Close();
                    var pergunta_ao_iniciar = mySettings.Pergunta_ao_iniciar;
                    if (pergunta_ao_iniciar)
                    {
                        var flag4 = LV_DIR.Items.Count > 0;
                        if (flag4)
                        {
                            var flag5 = MessageBox.Show("Parece que já temos alguns itens deseja iniciar a verificação",
                                            "Locais já adicionado", MessageBoxButtons.YesNo,
                                            MessageBoxIcon.Exclamation) == DialogResult.Yes;
                            if (flag5) Ligar();
                        }
                    }
                }
            }
        }

        private void frmMain_FormClosing(object sender, FormClosingEventArgs e)
        {
            Application.DoEvents();
            var I = new StreamWriter(Application.StartupPath + "\\Arq.log", false);
            I.Write(Armazenar.MeusDiretorios);
            I.Close();
        }

        private void btn_Iniciar_Click(object sender, EventArgs e)
        {
            Ligar();
        }

        private void bnt_stop_Click(object sender, EventArgs e)
        {
            Ativar();
        }

        private void Salvar_Config_Click(object sender, EventArgs e)
        {
            var flag = Operators.CompareString(txt_Filtro.Text, null, false) == 0;
            if (flag)
                Interaction.MsgBox("Filtre um Tipo de Arquivos para Continuar", MsgBoxStyle.Exclamation, "Infomações");
            else
                mySettings.Filtrar = txt_Filtro.Text;
            Application.DoEvents();
            mySettings.Save();
            Armazenar.MeusDiretorios = null;
            try
            {
                foreach (var obj in LV_DIR.Items)
                {
                    var IA = (ListViewItem) obj;
                    Armazenar.MeusDiretorios = Armazenar.MeusDiretorios + IA.SubItems[1].Text + "\r\n";
                }
            }
            catch
            {
                // ignore
            }

            var I = new StreamWriter(Application.StartupPath + "\\Arq.log", false);
            I.Write(Armazenar.MeusDiretorios);
            I.Close();
            mySettings.Modificados = CK_MOD.Checked;
            mySettings.Excluídos = CK_DEL.Checked;
            mySettings.Criados = CK_CRIADOS.Checked;
            mySettings.Renomeados = CK_RENAMED.Checked;
            mySettings.Filtrar = txt_Filtro.Text;
            mySettings.SubDiretorios = CK_SUBDIR.Checked;
            mySettings.Pergunta_ao_iniciar = P_iniciar.Checked;
        }

        private void btn_add_Click(object sender, EventArgs e)
        {
            var N = new FolderBrowserDialog();
            N.ShowNewFolderButton = true;
            N.RootFolder = Environment.SpecialFolder.Desktop;
            var flag = N.ShowDialog() == DialogResult.OK;
            if (flag)
            {
                txt_Dir.Text = N.SelectedPath;
                var I = new ListViewItem();
                I.Text = Path.GetFileName(N.SelectedPath);
                I.SubItems.Add(N.SelectedPath);
                I.ImageIndex = 0;
                I.Group = LV_DIR.Groups["GP_Pastas"];
                LV_DIR.Items.Add(I);
            }
        }

        private void Button2_Click(object sender, EventArgs e)
        {
            try
            {
                foreach (var obj in LV_DIR.SelectedItems)
                {
                    var I = (ListViewItem) obj;
                    I.Remove();
                }
            }
            catch
            {
            }
        }

        private void Button3_Click(object sender, EventArgs e)
        {
            MessageBox.Show("yeye");
            LV_DIR.Items.Clear();
        }

        private void AddTextDr_Click(object sender, EventArgs e)
        {
            var I = new ListViewItem();
            I.Text = Path.GetFileName(txt_Dir.Text);
            I.SubItems.Add(txt_Dir.Text);
            I.ImageIndex = 0;
            I.Group = LV_DIR.Groups["GP_Pastas"];
            LV_DIR.Items.Add(I);
        }

        public void AbrirDiretorioToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Process.Start(Application.StartupPath);
        }

        #endregion

        #region "Monitoring TCP connections of process"

        private void doTCPConnectionsView()
        {
            TCPProcess.TcpInfo[] TCPConnects = null;
            var flag = !TCPProcess.getTCPListNow(ref TCPConnects);
            if (!flag)
            {
                var tFont = new Font("Tahoma", LstItems.Font.Size, FontStyle.Regular);
                LstItems.Items.Clear();
                try
                {
                    foreach (var Info in TCPConnects)
                    {
                        var flag2 = Process.GetCurrentProcess().Id != Info.PID;
                        if (flag2)
                        {
                            var lvItem = new ListViewItem();
                            lvItem.Font = tFont;
                            var Tempo = Tools.GetProcessName(Info.PID);
                            var flag3 = string.IsNullOrEmpty(Tempo);
                            if (flag3) Tempo = "---------------";
                            lvItem.Tag = Tempo;
                            lvItem.Text = Tools.GetFilename(Tempo);
                            lvItem.SubItems.Add(Info.LocalIP);
                            lvItem.SubItems.Add(Info.LocalPort);
                            lvItem.SubItems.Add(Info.RemoteIP);
                            lvItem.SubItems.Add(Info.RemotePort);
                            lvItem.SubItems.Add(Info.State);
                            lvItem.SubItems.Add(Info.PID.ToString());
                            LstItems.Items.Add(lvItem);
                        }
                    }
                }
                catch
                {
                    //ignore
                }

                TCPConnects = null;
            }
        }

        private void btnUpdateTCP_Click(object sender, EventArgs e)
        {
            doTCPConnectionsView();
        }

        #endregion

        private void AdicionarOuRetirarPastaToolStripMenuItem_Click(object sender, EventArgs e)
        {
            new Form2().Show();
        }
    }
}