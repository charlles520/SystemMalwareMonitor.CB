using System;
using System.Drawing;
using System.IO;
using System.Windows.Forms;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using SFMCB.Properties;
using SFMCB.Utilitários;

namespace SFMCB
{
    public partial class Form2 : Form
    {
        private bool Holding;

        private int MouseDownX;

        private int MouseDownY;
        private readonly Settings mySettings = new Settings();

        public Form2()
        {
            InitializeComponent();
        }

        private void btn_add_Click(object sender, EventArgs e)
        {
            var N = new FolderBrowserDialog();
            N.ShowNewFolderButton = true;
            N.RootFolder = Environment.SpecialFolder.Desktop;
            if (N.ShowDialog() == DialogResult.OK)
            {
                txt_Dir.Text = N.SelectedPath;
                var I = new ListViewItem();
                I.Text = Path.GetFileName(N.SelectedPath);
                I.SubItems.Add(N.SelectedPath);
                I.ImageIndex = 0;
                I.Group = LV_DIR.Groups["GP_Pastas"];
                LV_DIR.Items.Add(I);
            }
        }

        private void Button2_Click(object sender, EventArgs e)
        {
            try
            {
                foreach (var obj in LV_DIR.SelectedItems)
                {
                    var I = (ListViewItem) obj;
                    I.Remove();
                }
            }
            catch
            {
                // ignore
            }
        }

        private void Button3_Click(object sender, EventArgs e)
        {
            LV_DIR.Items.Clear();
        }

        private void Form2_FormClosing(object sender, FormClosingEventArgs e)
        {
            var flag = Operators.CompareString(txt_Filtro.Text, null, false) == 0;
            if (flag)
            {
                Interaction.MsgBox("Filtre um Tipo de Arquivos para Continuar", MsgBoxStyle.Exclamation, "Infomações");
                e.Cancel = true;
            }
            else
            {
                mySettings.Filtrar = txt_Filtro.Text;
            }

            Application.DoEvents();
            mySettings.Save();
            Armazenar.MeusDiretorios = null;
            try
            {
                foreach (var obj in LV_DIR.Items)
                {
                    var IA = (ListViewItem) obj;
                    Armazenar.MeusDiretorios = Armazenar.MeusDiretorios + IA.SubItems[1].Text + "\r\n";
                }
            }
            catch
            {
                // ignore
            }

            var I = new StreamWriter(Application.StartupPath + "\\Arq.log", false);
            I.Write(Armazenar.MeusDiretorios);
            I.Close();
            mySettings.Modificados = CK_MOD.Checked;
            mySettings.Excluídos = CK_DEL.Checked;
            mySettings.Criados = CK_CRIADOS.Checked;
            mySettings.Renomeados = CK_RENAMED.Checked;
            mySettings.Filtrar = txt_Filtro.Text;
            mySettings.SubDiretorios = CK_SUBDIR.Checked;
        }

        private void Form2_Load(object sender, EventArgs e)
        {
            LV_DIR.Items.Clear();
            lbl_dir.Text = "Diretório ex: " + Environment.GetFolderPath(Environment.SpecialFolder.Desktop);
            var flag = !File.Exists(Application.StartupPath + "\\Arq.log");
            if (!flag)
            {
                var I = new StreamReader(Application.StartupPath + "\\Arq.log");
                foreach (var A in Strings.Split(I.ReadToEnd(), "\r\n", -1, CompareMethod.Binary))
                {
                    var flag2 = Directory.Exists(A);
                    if (flag2)
                    {
                        var N = new ListViewItem();
                        N.Text = Path.GetFileName(A);
                        N.SubItems.Add(A);
                        N.ImageIndex = 0;
                        N.Group = LV_DIR.Groups["GP_Pastas"];
                        LV_DIR.Items.Add(N);
                    }
                }

                I.Close();
                CK_MOD.Checked = mySettings.Modificados;
                CK_DEL.Checked = mySettings.Excluídos;
                CK_CRIADOS.Checked = mySettings.Criados;
                CK_RENAMED.Checked = mySettings.Renomeados;
                txt_Filtro.Text = mySettings.Filtrar;
                CK_SUBDIR.Checked = mySettings.SubDiretorios;
            }
        }

        private void Form2_MouseDown(object sender, MouseEventArgs e)
        {
            if (e.Button == MouseButtons.Left)
            {
                Holding = true;
                MouseDownX = e.X;
                MouseDownY = e.Y;
            }
        }

        private void Form2_MouseMove(object sender, MouseEventArgs e)
        {
            if (Holding)
            {
                Location = checked(new Point
                {
                    X = Location.X + (e.X - MouseDownX),
                    Y = Location.Y + (e.Y - MouseDownY)
                });
                var temp = default(Point);
            }
        }

        private void Form2_MouseUp(object sender, MouseEventArgs e)
        {
            if (e.Button == MouseButtons.Left) Holding = false;
        }

        private void Button1_Click(object sender, EventArgs e)
        {
            Close();
        }
    }
}